name: workflow dispatch inputs
run-name: ${{ github.ref_name }} by @${{ github.actor }} at ${{ github.workflow }}
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: "environment"
        required: true
        options:
          - develop
          - preview
          - production
      name:
        type: string
        description: "name"
        required: true
      flag:
        type: boolean
        description: "flag"
        required: true
        default: false
      tag:
        type: string
        description: "tag"
        required: false
defaults:
  run:
    shell: bash
jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Set Tag
        id: tag
        run: |
          if [[ -z "${{ inputs.tag }}" ]]; then
            echo "tag=release-$(TZ=JST-9 date '+%Y-%m-%d-1')" >> $GITHUB_OUTPUT
          else
            echo "tag=release-${{ inputs.tag }}" >> $GITHUB_OUTPUT
          fi
      - name: Check
        run: |
          pattern="^release-[0-9]{4}-[0-9]{2}-[0-9]{2}-[0-9]$"
          if [[ ${{ steps.tag.outputs.tag }} =~ $pattern ]]; then
            echo ${{ steps.tag.outputs.tag }}
            exit 0
          else
            echo "tag is invalid"
            exit 1
          fi
      - name: Repository
        run: |
          echo ${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}
          echo ${${{ github.repository }}#${{ github.repository_owner }}/}
  workflow_dispatch:
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      ENV: |-
        ${{ fromJSON('{
          "develop": "dev",
          "preview": "prev",
          "production": "prod"
        }')[github.event.inputs.environment] }}
    steps:
      - name: Display environment
        run: |
          echo "environment: ${{ github.event.inputs.environment }}"
          echo "env: ${{ env.ENV }}"
      - name: Check name
        run: |
          if [[ -z "${{ inputs.name }}" ]]; then
            echo "name is empty"
            exit 1
          fi
      - name: Check flag
        run: |
          if [[ ${{ inputs.flag }} ]]; then
            echo "${{ inputs.name }}"
          fi
      - name: Check tag
        run: |
          echo "tag: ${{ needs.prepare.outputs.tag }}"
